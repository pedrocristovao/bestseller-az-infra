name: Terraform Plan and Apply

on:
  push:
    branches: [main]

env:
  # Azure Credentials
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

  # Backend Configuration
  TF_BACKEND_RG: ${{ secrets.TF_BACKEND_RG }}
  TF_BACKEND_STORAGE: ${{ secrets.TF_BACKEND_STORAGE }}
  TF_BACKEND_CONTAINER: ${{ secrets.TF_BACKEND_CONTAINER }}
  TF_BACKEND_KEY_TRIAGE: ${{ secrets.TF_BACKEND_KEY_TRIAGE }}
  TF_BACKEND_KEY_PRODUCTION: ${{ secrets.TF_BACKEND_KEY_PRODUCTION }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      plan-ready: ${{ steps.set-output.outputs.ready }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Install TFLint
        run: curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: TFLint - Triage
        run: tflint --init && tflint
        working-directory: triage

      - name: Terraform Init - Triage
        run: |
          terraform init \
            -backend-config="resource_group_name=${TF_BACKEND_RG}" \
            -backend-config="storage_account_name=${TF_BACKEND_STORAGE}" \
            -backend-config="container_name=${TF_BACKEND_CONTAINER}" \
            -backend-config="key=${TF_BACKEND_KEY_TRIAGE}"
        working-directory: triage

      - name: Terraform Plan - Triage
        run: terraform plan -out=tfplan
        working-directory: triage

      - name: TFLint - Prod
        run: tflint --init && tflint
        working-directory: prod

      - name: Terraform Init - Prod
        run: |
          terraform init \
            -backend-config="resource_group_name=${TF_BACKEND_RG}" \
            -backend-config="storage_account_name=${TF_BACKEND_STORAGE}" \
            -backend-config="container_name=${TF_BACKEND_CONTAINER}" \
            -backend-config="key=${TF_BACKEND_KEY_PRODUCTION}"
        working-directory: prod

      - name: Terraform Plan - Prod
        run: terraform plan -out=tfplan
        working-directory: prod

  wait-approval:
    name: ‚è≥ Manual Approval
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: production-apply
      deployment_branch_policy:
        protected_branches: true
    steps:
      - name: Awaiting manual approval
        run: echo "Approve this step to apply the Terraform plans."

  apply:
    name: Terraform Apply (Triage & Production)
    runs-on: ubuntu-latest
    needs: [plan, wait-approval]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init + Apply - Triage
        working-directory: triage
        run: |
          terraform init \
            -backend-config="resource_group_name=${TF_BACKEND_RG}" \
            -backend-config="storage_account_name=${TF_BACKEND_STORAGE}" \
            -backend-config="container_name=${TF_BACKEND_CONTAINER}" \
            -backend-config="key=${TF_BACKEND_KEY_TRIAGE}"
          terraform apply -auto-approve

      - name: Terraform Init + Apply - Prod
        working-directory: prod
        run: |
          terraform init \
            -backend-config="resource_group_name=${TF_BACKEND_RG}" \
            -backend-config="storage_account_name=${TF_BACKEND_STORAGE}" \
            -backend-config="container_name=${TF_BACKEND_CONTAINER}" \
            -backend-config="key=${TF_BACKEND_KEY_PRODUCTION}"
          terraform apply -auto-approve
